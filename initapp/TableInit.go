package initapp

import (
	"blog/global"
	"blog/model/blog"
	"blog/model/system"
	"go.uber.org/zap"
	"gorm.io/gorm"
	"os"
)

//中转状态
func Grom() *gorm.DB {
	switch global.GM_CONFIG.System.DbType {
	//case "mysql":
	//	return GormMysql()
	//	暂时不考虑捏
	//case "pgsql":
	//	return GormPgSql()
	default:
		return GormMysql()
	}
}

func AutoTableInit(db *gorm.DB) {
	err := db.AutoMigrate(
		// 系统模块表
		system.SysApi{},
		system.SysUser{},
		system.SysBaseMenu{},
		system.JwtBlacklist{},
		system.SysAuthority{},
		system.SysDictionary{},
		system.SysOperationRecord{},
		//system.SysAutoCodeHistory{},
		system.SysDictionaryDetail{},
		system.SysBaseMenuParameter{},
		system.SysBaseMenuBtn{},

		system.SysAuthorityBtn{},
		//system.SysAutoCode{},
		//
		//// 示例模块表
		//example.ExaFile{},
		//example.ExaCustomer{},
		//example.ExaFileChunk{},
		system.FileUploadAndDownload{},
		blog.Article{},
		blog.Tag{},
		blog.ArticleContentBackUp{},

		// 自动化模块表
		// Code generated by github.com/flipped-aurora/gin-vue-admin/server Begin; DO NOT EDIT.
		// Code generated by github.com/flipped-aurora/gin-vue-admin/server End; DO NOT EDIT.
	)
	if err != nil {
		global.GM_LOG.Error("register table failed", zap.Error(err))
		os.Exit(0)
	}
	global.GM_LOG.Info("register table success")
}
